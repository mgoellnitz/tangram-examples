CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE CODE(CODE_ID BIGINT NOT NULL,ANNOTATION VARCHAR(255),CODE VARCHAR(32000),MIMETYPE VARCHAR(255),CONSTRAINT CODE_PK PRIMARY KEY(CODE_ID))
CREATE MEMORY TABLE SEQUENCE_TABLE(SEQUENCE_NAME VARCHAR(255) NOT NULL,NEXT_VAL BIGINT NOT NULL,CONSTRAINT SEQUENCE_TABLE_PK PRIMARY KEY(SEQUENCE_NAME))
CREATE MEMORY TABLE CONTAINER(CONTAINER_ID BIGINT NOT NULL,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),CONSTRAINT CONTAINER_PK PRIMARY KEY(CONTAINER_ID))
CREATE MEMORY TABLE ARTICLE(ARTICLE_ID BIGINT NOT NULL,"TEXT" LONGVARBINARY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),CONSTRAINT ARTICLE_PK PRIMARY KEY(ARTICLE_ID))
CREATE MEMORY TABLE IMAGEDATA(IMAGEDATA_ID BIGINT NOT NULL,"DATA" LONGVARBINARY,HEIGHT VARCHAR(255),MIMETYPE VARCHAR(255),WIDTH VARCHAR(255),KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),CONSTRAINT IMAGEDATA_PK PRIMARY KEY(IMAGEDATA_ID))
CREATE MEMORY TABLE TOPIC(TOPIC_ID BIGINT NOT NULL,TEASER LONGVARBINARY,THUMBNAIL_IMAGEDATA_ID_OID BIGINT,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),CONSTRAINT TOPIC_PK PRIMARY KEY(TOPIC_ID),CONSTRAINT TOPIC_FK1 FOREIGN KEY(THUMBNAIL_IMAGEDATA_ID_OID) REFERENCES IMAGEDATA(IMAGEDATA_ID))
CREATE INDEX TOPIC_N49 ON TOPIC(THUMBNAIL_IMAGEDATA_ID_OID)
CREATE MEMORY TABLE TOPIC_ELEMENTS(TOPIC_ID_OID BIGINT NOT NULL,ARTICLE_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT TOPIC_ELEMENTS_PK PRIMARY KEY(TOPIC_ID_OID,IDX),CONSTRAINT TOPIC_ELEMENTS_FK2 FOREIGN KEY(ARTICLE_ID_EID) REFERENCES ARTICLE(ARTICLE_ID),CONSTRAINT TOPIC_ELEMENTS_FK1 FOREIGN KEY(TOPIC_ID_OID) REFERENCES TOPIC(TOPIC_ID))
CREATE INDEX TOPIC_ELEMENTS_N49 ON TOPIC_ELEMENTS(TOPIC_ID_OID)
CREATE INDEX TOPIC_ELEMENTS_N50 ON TOPIC_ELEMENTS(ARTICLE_ID_EID)
CREATE MEMORY TABLE TOPIC_RELATEDCONTAINERS(TOPIC_ID_OID BIGINT NOT NULL,CONTAINER_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT TOPIC_RELATEDCONTAINERS_PK PRIMARY KEY(TOPIC_ID_OID,IDX),CONSTRAINT TOPIC_RELATEDCONTAINERS_FK2 FOREIGN KEY(CONTAINER_ID_EID) REFERENCES CONTAINER(CONTAINER_ID),CONSTRAINT TOPIC_RELATEDCONTAINERS_FK1 FOREIGN KEY(TOPIC_ID_OID) REFERENCES TOPIC(TOPIC_ID))
CREATE INDEX TOPIC_RELATEDCONTAINERS_N50 ON TOPIC_RELATEDCONTAINERS(TOPIC_ID_OID)
CREATE INDEX TOPIC_RELATEDCONTAINERS_N49 ON TOPIC_RELATEDCONTAINERS(CONTAINER_ID_EID)
CREATE MEMORY TABLE CONTAINER_CONTENTS(CONTAINER_ID_OID BIGINT NOT NULL,TOPIC_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT CONTAINER_CONTENTS_PK PRIMARY KEY(CONTAINER_ID_OID,IDX),CONSTRAINT CONTAINER_CONTENTS_FK1 FOREIGN KEY(CONTAINER_ID_OID) REFERENCES CONTAINER(CONTAINER_ID),CONSTRAINT CONTAINER_CONTENTS_FK2 FOREIGN KEY(TOPIC_ID_EID) REFERENCES TOPIC(TOPIC_ID))
CREATE INDEX CONTAINER_CONTENTS_N50 ON CONTAINER_CONTENTS(TOPIC_ID_EID)
CREATE INDEX CONTAINER_CONTENTS_N49 ON CONTAINER_CONTENTS(CONTAINER_ID_OID)
CREATE MEMORY TABLE TOPIC_SUBTOPICS(TOPIC_ID_OID BIGINT NOT NULL,TOPIC_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT TOPIC_SUBTOPICS_PK PRIMARY KEY(TOPIC_ID_OID,IDX),CONSTRAINT TOPIC_SUBTOPICS_FK1 FOREIGN KEY(TOPIC_ID_OID) REFERENCES TOPIC(TOPIC_ID),CONSTRAINT TOPIC_SUBTOPICS_FK2 FOREIGN KEY(TOPIC_ID_EID) REFERENCES TOPIC(TOPIC_ID))
CREATE INDEX TOPIC_SUBTOPICS_N49 ON TOPIC_SUBTOPICS(TOPIC_ID_EID)
CREATE INDEX TOPIC_SUBTOPICS_N50 ON TOPIC_SUBTOPICS(TOPIC_ID_OID)
CREATE MEMORY TABLE ROOTTOPIC(ROOTTOPIC_ID BIGINT NOT NULL,LOGO_IMAGEDATA_ID_OID BIGINT,TEASER LONGVARBINARY,THUMBNAIL_IMAGEDATA_ID_OID BIGINT,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),CONSTRAINT ROOTTOPIC_PK PRIMARY KEY(ROOTTOPIC_ID),CONSTRAINT ROOTTOPIC_FK2 FOREIGN KEY(LOGO_IMAGEDATA_ID_OID) REFERENCES IMAGEDATA(IMAGEDATA_ID),CONSTRAINT ROOTTOPIC_FK1 FOREIGN KEY(THUMBNAIL_IMAGEDATA_ID_OID) REFERENCES IMAGEDATA(IMAGEDATA_ID))
CREATE INDEX ROOTTOPIC_N50 ON ROOTTOPIC(LOGO_IMAGEDATA_ID_OID)
CREATE INDEX ROOTTOPIC_N49 ON ROOTTOPIC(THUMBNAIL_IMAGEDATA_ID_OID)
CREATE MEMORY TABLE ROOTTOPIC_JS(ROOTTOPIC_ID_OID BIGINT NOT NULL,CODE_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT ROOTTOPIC_JS_PK PRIMARY KEY(ROOTTOPIC_ID_OID,IDX),CONSTRAINT ROOTTOPIC_JS_FK2 FOREIGN KEY(CODE_ID_EID) REFERENCES CODE(CODE_ID),CONSTRAINT ROOTTOPIC_JS_FK1 FOREIGN KEY(ROOTTOPIC_ID_OID) REFERENCES ROOTTOPIC(ROOTTOPIC_ID))
CREATE INDEX ROOTTOPIC_JS_N49 ON ROOTTOPIC_JS(ROOTTOPIC_ID_OID)
CREATE INDEX ROOTTOPIC_JS_N50 ON ROOTTOPIC_JS(CODE_ID_EID)
CREATE MEMORY TABLE ROOTTOPIC_BOTTOMLINKS(ROOTTOPIC_ID_OID BIGINT NOT NULL,TOPIC_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT ROOTTOPIC_BOTTOMLINKS_PK PRIMARY KEY(ROOTTOPIC_ID_OID,IDX),CONSTRAINT ROOTTOPIC_BOTTOMLINKS_FK1 FOREIGN KEY(ROOTTOPIC_ID_OID) REFERENCES ROOTTOPIC(ROOTTOPIC_ID),CONSTRAINT ROOTTOPIC_BOTTOMLINKS_FK2 FOREIGN KEY(TOPIC_ID_EID) REFERENCES TOPIC(TOPIC_ID))
CREATE INDEX ROOTTOPIC_BOTTOMLINKS_N49 ON ROOTTOPIC_BOTTOMLINKS(ROOTTOPIC_ID_OID)
CREATE INDEX ROOTTOPIC_BOTTOMLINKS_N50 ON ROOTTOPIC_BOTTOMLINKS(TOPIC_ID_EID)
CREATE MEMORY TABLE ROOTTOPIC_CSS(ROOTTOPIC_ID_OID BIGINT NOT NULL,CODE_ID_EID BIGINT,IDX INTEGER NOT NULL,CONSTRAINT ROOTTOPIC_CSS_PK PRIMARY KEY(ROOTTOPIC_ID_OID,IDX),CONSTRAINT ROOTTOPIC_CSS_FK2 FOREIGN KEY(CODE_ID_EID) REFERENCES CODE(CODE_ID),CONSTRAINT ROOTTOPIC_CSS_FK1 FOREIGN KEY(ROOTTOPIC_ID_OID) REFERENCES ROOTTOPIC(ROOTTOPIC_ID))
CREATE INDEX ROOTTOPIC_CSS_N49 ON ROOTTOPIC_CSS(ROOTTOPIC_ID_OID)
CREATE INDEX ROOTTOPIC_CSS_N50 ON ROOTTOPIC_CSS(CODE_ID_EID)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 10
SET SCHEMA PUBLIC
INSERT INTO CODE VALUES(32,'org.tangram.example.Topic','<html>\u000a<head>\u000a  <title>$self.title</title>\u000a  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />\u000a  <meta name="viewport" content="width=320, initial-scale=0.95" />  \u000a  <meta name="keywords" content="$self.keywords" />\u000a  <meta name="language" content="de" />\u000a#foreach($css in $self.rootTopic.css)\u000a  #include($css ''cssimport'')\u000a  \u000a#end\u000a  <style type="text/css" media="only screen and (min-width: 620px)">\u000a    .box { height: 300px; }\u000a  </style>\u000a  <style type="text/css" media="only screen and (max-width: 480px)">\u000a    body { padding: 0; }\u000a  </style>\u000a#foreach($js in $self.rootTopic.js)\u000a  #include($js ''jsimport'')\u000a  \u000a#end\u000a</head>\u000a<body>\u000a  <div class="header"><p><a #link($self.rootTopic true)>$self.rootTopic.shortTitle</a> - $self.title</p></div>\u000a<div class="infobox">\u00a9 2014 - <a href="http://github.com/mgoellnitz/tangram-examples/">Tangram Examples</a></div>\u000a  <div class="box" style="clear: both; width: 100%; height: 0px;"></div>\u000a#foreach($box in $self.subTopics)\u000a  <div class="box"><h3><a #link($box true)>$box.title</a></h3>\u000a    #include($box.teaser)\u000a    <ul>\u000a    #foreach($b in $box.subTopics)\u000a      <li><a #link($b true)>$b.title</a></li>\u000a    #end\u000a    </ul>\u000a  </div>\u000a#end\u000a  <hr style="clear: both;"/>\u000a  #include($self ''editor'')\u000a</body>\u000a</html>\u000a','text/html')
INSERT INTO CODE VALUES(33,'screen','body {\u000a  background-color: #405060;\u000a  color: #607080;\u000a  font-family: Arial, Helvetica;\u000a  padding-top: 5px;\u000a  padding-bottom: 5px;\u000a  padding-left: 10px;\u000a  padding-right: 10px;\u000a  vertical-align: bottom;\u000a}\u000a\u000adiv {\u000a  margin: 0;\u000a  padding: 0;\u000a}\u000a\u000ap {\u000a  margin: 0;\u000a  padding: 0;\u000a}\u000a\u000aa {\u000a  text-decoration: none;\u000a  color: #FFFFFF;\u000a}\u000a\u000aa:link { }\u000a\u000aa:visited { }\u000a\u000aa:hover { color: #909090; }\u000a\u000aa:focus { color: #0000FF; }\u000a\u000aa:active { color: #FF0000; }\u000a\u000a.header a {\u000a  color: #D0C080;\u000a}\u000a\u000a\u000ah1 { font-size: 14pt; }\u000a\u000a.header {\u000a  background-color: #FFFFFF;\u000a  color: #D0C080;\u000a  height: 60px;\u000a  font-size: 20pt;\u000a  font-weight: bold;\u000a  text-align: right;\u000a  vertical-align: bottom;\u000a  padding: 10px;\u000a}\u000a\u000a.infobox {\u000a  background-color: #D0C080;\u000a  height: 24px;\u000a  padding-top: 5px;\u000a  padding-left: 5px;\u000a  margin: 0;\u000a}\u000a\u000a.box {\u000a  padding: 5px;\u000a  width: 300px;\u000a  float: left;\u000a  color: #909090;\u000a}\u000a\u000a','text/css')
INSERT INTO CODE VALUES(34,'org.tangram.example.Topic','package org.tangram.example.links;\u000a\u000aimport javax.servlet.http.HttpServletRequest;\u000aimport javax.servlet.http.HttpServletResponse;\u000aimport org.slf4j.Logger;\u000aimport org.slf4j.LoggerFactory;\u000a\u000aimport org.tangram.Constants;\u000aimport org.tangram.content.Content;\u000aimport org.tangram.content.BeanFactory;\u000aimport org.tangram.content.BeanFactoryAware;\u000aimport org.tangram.view.Utils;\u000aimport org.tangram.view.TargetDescriptor;\u000aimport org.tangram.link.Link;\u000aimport org.tangram.link.LinkHandler;\u000a\u000aimport org.tangram.example.RootTopic;\u000aimport org.tangram.example.Linkable;\u000aimport org.tangram.example.Topic;\u000aimport org.tangram.example.ImageData;\u000a\u000apublic class ExampleLinkScheme implements LinkHandler, BeanFactoryAware {\u000a  \u000a  private static Logger log = LoggerFactory.getLogger(ExampleLinkScheme.class);\u000a\u000a  private BeanFactory beanFactory;\u000a  \u000a  \u000a  public void setBeanFactory(BeanFactory factory) {\u000a    beanFactory = factory;\u000a  } // setBeanFactory()\u000a  \u000a  \u000a  public Set<String> getCustomViews() {\u000a    Set <String> result = new HashSet<String>();\u000a    result.add(Constants.DEFAULT_VIEW);\u000a    return result;\u000a  } // getCustomViews()\u000a\u000a\u000a  public Link createLink(HttpServletRequest request, HttpServletResponse response, Object bean, String action, String view) {    \u000a        Link result = null;\u000a        if ((action==null)&&(view==null)) {\u000a            if (bean instanceof RootTopic) {\u000a                result = new Link();\u000a                result.setUrl("/");\u000a            } else {\u000a                if ((bean instanceof Topic)||(bean instanceof ImageData)) {\u000a                    String title = "-";\u000a                    if (bean instanceof Linkable) {\u000a                        try {\u000a                            title = Utils.urlize(((Linkable)bean).getTitle());\u000a                        } catch (UnsupportedEncodingException uee) {\u000a                            log.error("createLink()", uee);\u000a                        } // try\u000a                    } // if\u000a                    String url = "/"+title+"/"+bean.id;\u000a                    if (bean instanceof Topic) {\u000a                      url = url+".html";\u000a                    } // if\u000a                    result = new Link();\u000a                    // result.addHandler("onclick", "pageload()");\u000a                    result.setUrl(url);\u000a                } // if\u000a            } // if\u000a        } // if\u000a        return result;\u000a  } // createLink()\u000a\u000a    \u000a  private TargetDescriptor rootDescriptor = null;;\u000a  \u000a  \u000a  public TargetDescriptor parseLink(String url, HttpServletResponse response) {\u000a    TargetDescriptor result = null;\u000a    if (url.equals("/")) {\u000a        try {\u000a            if (rootDescriptor==null) {\u000a                List<RootTopic> rs = beanFactory.listBeans(RootTopic.class, null);\u000a                RootTopic root = null;\u000a                if (rs.size()==1) {\u000a                    root = rs.get(0);\u000a                } else {\u000a                    response.sendError(HttpServletResponse.SC_NOT_FOUND, "Have "+rs.size()+" RootTopics in data store");\u000a                } // if\u000a                rootDescriptor = new TargetDescriptor(root, null, null);\u000a            } // if\u000a            result = rootDescriptor;\u000a        } catch (Exception e) {\u000a            result = new TargetDescriptor(e, null, null);\u000a        } // try/catch\u000a      } else {\u000a          Object bean  = null;\u000a          String[] elements = url.split("/");\u000a          String id = null;\u000a          for (String element : elements) {\u000a            if (element.indexOf(":") > 0) {\u000a              int idx = element.indexOf(".");\u000a              if (idx >= 0) {\u000a                element = element.substring(0, idx);\u000a              } // if\u000a              id = element;\u000a              bean = beanFactory.getBean(element);\u000a            } // if\u000a          } // for\u000a          if (bean != null) {\u000a              result = new TargetDescriptor(bean, null, null);\u000a          } else {\u000a              response.sendError(HttpServletResponse.SC_NOT_FOUND, "no content with id "+id+" in repository.");\u000a          } // if\u000a      } // if\u000a      return result;\u000a  } // parseLink()\u000a    \u000a} // ExampleLinkScheme\u000a','application/x-groovy')
INSERT INTO CODE VALUES(52,'org.tangram.example.Linkable.name','$self.class.simpleName: #if($self.title)$self.title#else$self.id#end','text/html')
INSERT INTO SEQUENCE_TABLE VALUES('org.tangram.nucleus.NucleusContent',61)
INSERT INTO TOPIC VALUES(35,'',NULL,NULL,'JDO','Java Data Object')
INSERT INTO TOPIC VALUES(36,'',NULL,NULL,'JPA','Java Persistence API')
INSERT INTO TOPIC VALUES(37,'',NULL,NULL,'EBean','EBean')
INSERT INTO TOPIC VALUES(38,'',NULL,NULL,'Model','Model')
INSERT INTO TOPIC VALUES(39,'',NULL,NULL,'JSP','Java Server Pages')
INSERT INTO TOPIC VALUES(40,'003c0070003e004100700061006300680065002000560065006c006f00630069007400790020007600690065007700730020006100720065002000730074006f00720065006400200069006e00200061002000640065006600610075006c00740020006d006f00640065006c00200063006c0061007300730020002600710075006f0074003b0043006f00640065002600710075006f0074003b00200061006e00640020007400680075007300200069006e002000740068006500200073006f002000630061006c006c006500640020007200650070006f007300690074006f00720079002e003c002f0070003e000a',NULL,'View, Velocity, Dynamic, Repository','Velocity','Apache Velocity')
INSERT INTO TOPIC VALUES(41,'003c0070003e00540061006e006700720061006d00200063006f006e007400610069006e007300200070006c00750067006700610062006c0065002c0020006f0062006a0065006300740020006f007200690065006e007400650064002000760069006500770069006e00670020006f007000740069006f006e007300200077006900740068002000740077006f002000700072006f006d0069006e0065006e0074002000640065006600610075006c00740073002e003c002f0070003e000a',NULL,NULL,'View','View')
INSERT INTO TOPIC VALUES(42,'',NULL,NULL,'Spring','Spring Controller')
INSERT INTO TOPIC VALUES(43,'',NULL,NULL,'Generic Handlers','Tangram Link Handlers')
INSERT INTO TOPIC VALUES(44,'',NULL,NULL,'Servlet','Servlet')
INSERT INTO TOPIC VALUES(45,'',NULL,NULL,'Controller','Controller')
INSERT INTO TOPIC_SUBTOPICS VALUES(38,35,0)
INSERT INTO TOPIC_SUBTOPICS VALUES(38,36,1)
INSERT INTO TOPIC_SUBTOPICS VALUES(38,37,2)
INSERT INTO TOPIC_SUBTOPICS VALUES(41,39,0)
INSERT INTO TOPIC_SUBTOPICS VALUES(41,40,1)
INSERT INTO TOPIC_SUBTOPICS VALUES(45,42,0)
INSERT INTO TOPIC_SUBTOPICS VALUES(45,43,1)
INSERT INTO TOPIC_SUBTOPICS VALUES(45,44,2)
INSERT INTO ROOTTOPIC VALUES(51,NULL,'',NULL,'Tangram Example Website','Tangram','Home')
INSERT INTO ROOTTOPIC_CSS VALUES(51,33,0)
