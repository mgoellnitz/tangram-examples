# 
# Copyright (C) 2013 Martin Goellnitz
# 
# This work is licensed under the Creative Commons Attribution 3.0 
# Unported License. To view a copy of this license, visit 
# http://creativecommons.org/licenses/by/3.0/ or send a letter to 
# Creative Commons, 444 Castro Street, Suite 900, Mountain View, 
# California, 94041, USA.
# 
#
# JNDI based datasource config example for run@cloudbees, meaning to use a MySQL rdbms storage as database layer.
# This could be perfectly directly placed in a jdoconfig.xml an is only mentioned here, since we decided not
# to do some configurastions here and some in jdoconfig.xml.
# datanucleus.ConnectionFactoryName=java:comp/env/jdbc/mydb
#
#
# MongoDB config example for run@cloudbees. Since they use one environment variable for the setup and we are encouraged 
# to use it, we split this URL apart and pass the parts to the JDO layer with jdoconfig.xml overrides.
# Connect MongoDB with application with bees tool:
#    bees app:bind -a <APPID> -r mongohq:<MONGOHQ_RESOURCE> -as MYDB
# javax.jdo.option.ConnectionURL=mongodb:${MONGOHQ_URL_MYDB.host}:${MONGOHQ_URL_MYDB.port}/${MONGOHQ_URL_MYDB.uri}
# javax.jdo.option.ConnectionUserName=${MONGOHQ_URL_MYDB.username}
# javax.jdo.option.ConnectionPassword=${MONGOHQ_URL_MYDB.password}
#
#
# MongoDB config example for OpenShift. Since they use environment variables for the setup and we are encouraged to use
# them, we pass them to the JDO layer with jdoconfig.xml overrides.
# javax.jdo.option.ConnectionURL=mongodb:${OPENSHIFT_MONGODB_DB_HOST}:${OPENSHIFT_MONGODB_DB_PORT}/test
# javax.jdo.option.ConnectionUserName=${OPENSHIFT_MONGODB_DB_USERNAME}
# javax.jdo.option.ConnectionPassword=${OPENSHIFT_MONGODB_DB_PASSWORD}
#
#
# MySQL config example for OpenShift. Since they use environment variables for the setup and we are encouraged to use
# them, we pass them to the JDO layer with jdoconfig.xml overrides.
# javax.jdo.option.ConnectionDriverName=com.mysql.jdbc.Driver
# javax.jdo.option.ConnectionURL=jdbc:mysql://${OPENSHIFT_MYSQL_DB_HOST}:${OPENSHIFT_MYSQL_DB_PORT}/test
# javax.jdo.option.ConnectionUserName=${OPENSHIFT_MYSQL_DB_USERNAME}
# javax.jdo.option.ConnectionPassword=${OPENSHIFT_MYSQL_DB_PASSWORD}
# javax.jdo.option.Mapping=mysql
#
#
# Example to use an ODF (.ods) document as storage. This option does not support large character fields.
# javax.jdo.option.ConnectionURL=odf:file:db/file/tangram.ods
#
#
# Example to use an XLS file as storage. This option does not support large character fields.
# javax.jdo.option.ConnectionURL=file:db/file/tangram.xls
#
#
# hsqldb config example. Content provided when directly running in the development environment.
javax.jdo.option.ConnectionDriverName=org.hsqldb.jdbcDriver
javax.jdo.option.ConnectionURL=jdbc:hsqldb:file:db/hsqldb/tangram
javax.jdo.option.ConnectionUserName=sa
javax.jdo.option.ConnectionPassword=
javax.jdo.option.Mapping=hsqldb
#
#
# h2sql config example. Content provided when directly in the development environment.
# javax.jdo.option.ConnectionDriverName=org.h2.Driver
# javax.jdo.option.ConnectionURL=jdbc:h2:file:db/h2/tangram
# javax.jdo.option.ConnectionUserName=sa
# javax.jdo.option.ConnectionPassword=
# javax.jdo.option.Mapping=hsqldb
#
#
# PostgreSQL onfig example for standalone installation.
# javax.jdo.option.ConnectionDriverName=org.postgresql.Driver
# javax.jdo.option.ConnectionURL=jdbc:postgresql://localhost:5432/postgres
# javax.jdo.option.ConnectionUserName=tex
# javax.jdo.option.ConnectionPassword=tex
# javax.jdo.option.Mapping=postgres
