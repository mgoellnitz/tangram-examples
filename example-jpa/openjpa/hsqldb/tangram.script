CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE ARTICLE(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEXT VARCHAR(255))
CREATE MEMORY TABLE CODE(ID BIGINT NOT NULL PRIMARY KEY,ANNOTATION VARCHAR(255),CODE VARCHAR(255),MIMETYPE VARCHAR(255))
CREATE MEMORY TABLE CONTAINER(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255))
CREATE MEMORY TABLE CONTAINER_TOPIC(CONTAINER_ID BIGINT,CONTENTS_ID BIGINT)
CREATE INDEX I_CNTNTPC_CONTAINER_ID ON CONTAINER_TOPIC(CONTAINER_ID)
CREATE INDEX I_CNTNTPC_ELEMENT ON CONTAINER_TOPIC(CONTENTS_ID)
CREATE MEMORY TABLE IMAGEDATA(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),DATA VARBINARY,HEIGHT VARCHAR(255),MIMETYPE VARCHAR(255),WIDTH VARCHAR(255))
CREATE MEMORY TABLE OPENJPA_SEQUENCE_TABLE(ID TINYINT NOT NULL PRIMARY KEY,SEQUENCE_VALUE BIGINT)
CREATE MEMORY TABLE ROOTTOPIC(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEASER VARCHAR(255),THUMBNAIL_ID BIGINT,LOGO_ID BIGINT)
CREATE INDEX I_ROTTOPC_LOGO ON ROOTTOPIC(LOGO_ID)
CREATE INDEX I_ROTTOPC_THUMBNAIL ON ROOTTOPIC(THUMBNAIL_ID)
CREATE MEMORY TABLE ROOTTOPICBOTTOMLINKS(ROOTTOPIC_ID BIGINT,BOTTOMLINKS_ID BIGINT)
CREATE INDEX I_RTTPNKS_ELEMENT ON ROOTTOPICBOTTOMLINKS(BOTTOMLINKS_ID)
CREATE INDEX I_RTTPNKS_ROOTTOPIC_ID ON ROOTTOPICBOTTOMLINKS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPICCSS(ROOTTOPIC_ID BIGINT,CSS_ID BIGINT)
CREATE INDEX I_RTTPCSS_ELEMENT ON ROOTTOPICCSS(CSS_ID)
CREATE INDEX I_RTTPCSS_ROOTTOPIC_ID ON ROOTTOPICCSS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPICJS(ROOTTOPIC_ID BIGINT,JS_ID BIGINT)
CREATE INDEX I_RTTPCJS_ELEMENT ON ROOTTOPICJS(JS_ID)
CREATE INDEX I_RTTPCJS_ROOTTOPIC_ID ON ROOTTOPICJS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_ARTICLE(ROOTTOPIC_ID BIGINT,ELEMENTS_ID BIGINT)
CREATE INDEX I_RTTPTCL_ELEMENT ON ROOTTOPIC_ARTICLE(ELEMENTS_ID)
CREATE INDEX I_RTTPTCL_ROOTTOPIC_ID ON ROOTTOPIC_ARTICLE(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_CONTAINER(ROOTTOPIC_ID BIGINT,RELATEDCONTAINERS_ID BIGINT)
CREATE INDEX I_RTTPTNR_ELEMENT ON ROOTTOPIC_CONTAINER(RELATEDCONTAINERS_ID)
CREATE INDEX I_RTTPTNR_ROOTTOPIC_ID ON ROOTTOPIC_CONTAINER(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_TOPIC(ROOTTOPIC_ID BIGINT,SUBTOPICS_ID BIGINT)
CREATE INDEX I_RTTPTPC_ELEMENT ON ROOTTOPIC_TOPIC(SUBTOPICS_ID)
CREATE INDEX I_RTTPTPC_ROOTTOPIC_ID ON ROOTTOPIC_TOPIC(ROOTTOPIC_ID)
CREATE MEMORY TABLE TOPIC(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEASER VARCHAR(255),THUMBNAIL_ID BIGINT)
CREATE INDEX I_TOPIC_THUMBNAIL ON TOPIC(THUMBNAIL_ID)
CREATE MEMORY TABLE TOPIC_ARTICLE(TOPIC_ID BIGINT,ELEMENTS_ID BIGINT)
CREATE INDEX I_TPC_TCL_ELEMENT ON TOPIC_ARTICLE(ELEMENTS_ID)
CREATE INDEX I_TPC_TCL_TOPIC_ID ON TOPIC_ARTICLE(TOPIC_ID)
CREATE MEMORY TABLE TOPIC_CONTAINER(TOPIC_ID BIGINT,RELATEDCONTAINERS_ID BIGINT)
CREATE INDEX I_TPC_TNR_ELEMENT ON TOPIC_CONTAINER(RELATEDCONTAINERS_ID)
CREATE INDEX I_TPC_TNR_TOPIC_ID ON TOPIC_CONTAINER(TOPIC_ID)
CREATE MEMORY TABLE TOPIC_TOPIC(TOPIC_ID BIGINT,SUBTOPICS_ID BIGINT)
CREATE INDEX I_TPC_TPC_ELEMENT ON TOPIC_TOPIC(SUBTOPICS_ID)
CREATE INDEX I_TPC_TPC_TOPIC_ID ON TOPIC_TOPIC(TOPIC_ID)
CREATE MEMORY TABLE PASSWORDPROTECTION(ID BIGINT NOT NULL PRIMARY KEY,DESCRIPTION VARCHAR(255),PROTECTIONKEY VARCHAR(255),LOGIN VARCHAR(255),PASSWORD VARCHAR(255))
CREATE MEMORY TABLE PASSWORDPROTECTION_PROTECTEDCONTENTS(PASSWORDPROTECTION_ID BIGINT,ELEMENT BIGINT)
CREATE INDEX I_PSSWNTS_PASSWORDPROTECTION_ID ON PASSWORDPROTECTION_PROTECTEDCONTENTS(PASSWORDPROTECTION_ID)
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 10
SET SCHEMA PUBLIC
INSERT INTO CODE VALUES(1,'org.tangram.example.Topic','<html>\u000d\u000a<head>\u000d\u000a  <title>$self.title</title>\u000d\u000a  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />\u000d\u000a  <meta name="viewport" content="width=320, initial-scale=0.95" />  \u000d\u000a  <meta name="keywords" content="$self.keywords" />\u000d\u000a  <meta name="language" content="de" />\u000d\u000a#foreach($css in $self.rootTopic.css)\u000d\u000a  #include($css ''cssimport'')\u000d\u000a  \u000d\u000a#end\u000d\u000a  <style type="text/css" media="only screen and (min-width: 620px)">\u000d\u000a    .box { height: 300px; }\u000d\u000a  </style>\u000d\u000a  <style type="text/css" media="only screen and (max-width: 480px)">\u000d\u000a    body { padding: 0; }\u000d\u000a  </style>\u000d\u000a#foreach($js in $self.rootTopic.js)\u000d\u000a  #include($js ''jsimport'')\u000d\u000a  \u000d\u000a#end\u000d\u000a</head>\u000d\u000a<body>\u000d\u000a  <div class="header"><p><a #link($self.rootTopic true)>$self.rootTopic.shortTitle</a> - $self.title</p></div>\u000d\u000a<div class="infobox">\u00a9 2014 - <a href="http://github.com/mgoellnitz/tangram-examples/">Tangram Examples</a></div>\u000d\u000a  <div class="box" style="clear: both; width: 100%; height: 0px;"></div>\u000d\u000a#foreach($box in $self.subTopics)\u000d\u000a  <div class="box"><h3><a #link($box true)>$box.title</a></h3>\u000d\u000a    #include($box.teaser)\u000d\u000a    <ul>\u000d\u000a    #foreach($b in $box.subTopics)\u000d\u000a      <li><a #link($b true)>$b.title</a></li>\u000d\u000a    #end\u000d\u000a    </ul>\u000d\u000a  </div>\u000d\u000a#end\u000d\u000a  <hr style="clear: both;"/>\u000d\u000a  #include($self ''editor'')\u000d\u000a</body>\u000d\u000a</html>\u000d\u000a','text/html')
INSERT INTO CODE VALUES(2,'org.tangram.example.Linkable.name','$self.class.simpleName: #if($self.title)$self.title#else$self.id#end','text/html')
INSERT INTO CODE VALUES(3,'screen','body {\u000a  background-color: #405060;\u000a  color: #607080;\u000a  font-family: Arial, Helvetica;\u000a  padding-top: 5px;\u000a  padding-bottom: 5px;\u000a  padding-left: 10px;\u000a  padding-right: 10px;\u000a  vertical-align: bottom;\u000a}\u000a\u000adiv {\u000a  margin: 0;\u000a  padding: 0;\u000a}\u000a\u000ap {\u000a  margin: 0;\u000a  padding: 0;\u000a}\u000a\u000aa {\u000a  text-decoration: none;\u000a  color: #FFFFFF;\u000a}\u000a\u000aa:link { }\u000a\u000aa:visited { }\u000a\u000aa:hover { color: #909090; }\u000a\u000aa:focus { color: #0000FF; }\u000a\u000aa:active { color: #FF0000; }\u000a\u000a.header a {\u000a  color: #D0C080;\u000a}\u000a\u000a\u000ah1 { font-size: 14pt; }\u000a\u000a.header {\u000a  background-color: #FFFFFF;\u000a  color: #D0C080;\u000a  height: 60px;\u000a  font-size: 20pt;\u000a  font-weight: bold;\u000a  text-align: right;\u000a  vertical-align: bottom;\u000a  padding: 10px;\u000a}\u000a\u000a.infobox {\u000a  background-color: #D0C080;\u000a  height: 24px;\u000a  padding-top: 5px;\u000a  padding-left: 5px;\u000a  margin: 0;\u000a}\u000a\u000a.box {\u000a  padding: 5px;\u000a  width: 300px;\u000a  float: left;\u000a  color: #909090;\u000a}\u000a\u000a','text/css')
INSERT INTO CODE VALUES(4,'org.tangram.example.Topic','package org.tangram.example.links;\u000d\u000a\u000d\u000aimport javax.servlet.http.HttpServletRequest;\u000d\u000aimport javax.servlet.http.HttpServletResponse;\u000d\u000aimport org.slf4j.Logger;\u000d\u000aimport org.slf4j.LoggerFactory;\u000d\u000a\u000d\u000aimport org.tangram.Constants;\u000d\u000aimport org.tangram.content.Content;\u000d\u000aimport org.tangram.content.BeanFactory;\u000d\u000aimport org.tangram.content.BeanFactoryAware;\u000d\u000aimport org.tangram.view.Utils;\u000d\u000aimport org.tangram.view.TargetDescriptor;\u000d\u000aimport org.tangram.link.Link;\u000d\u000aimport org.tangram.link.LinkHandler;\u000d\u000a\u000d\u000aimport org.tangram.example.RootTopic;\u000d\u000aimport org.tangram.example.Linkable;\u000d\u000aimport org.tangram.example.Topic;\u000d\u000aimport org.tangram.example.ImageData;\u000d\u000a\u000d\u000apublic class ExampleLinkScheme implements LinkHandler, BeanFactoryAware {\u000d\u000a  \u000d\u000a  private static final Logger LOG = LoggerFactory.getLogger(ExampleLinkScheme.class);\u000d\u000a\u000d\u000a  private BeanFactory beanFactory;\u000d\u000a  \u000d\u000a  \u000d\u000a  public void setBeanFactory(BeanFactory factory) {\u000d\u000a    beanFactory = factory;\u000d\u000a  } // setBeanFactory()\u000d\u000a  \u000d\u000a  \u000d\u000a  public Set<String> getCustomViews() {\u000d\u000a    Set <String> result = new HashSet<String>();\u000d\u000a    result.add(Constants.DEFAULT_VIEW);\u000d\u000a    return result;\u000d\u000a  } // getCustomViews()\u000d\u000a\u000d\u000a\u000d\u000a  public Link createLink(HttpServletRequest request, HttpServletResponse response, Object bean, String action, String view) {    \u000d\u000a    Link result = null;\u000d\u000a    if ((action==null)&&(view==null)) {\u000d\u000a      if (bean instanceof RootTopic) {\u000d\u000a        result = new Link();\u000d\u000a        result.setUrl("/");\u000d\u000a      } else {\u000d\u000a        if ((bean instanceof Topic)||(bean instanceof ImageData)) {\u000d\u000a          String title = "-";\u000d\u000a          if (bean instanceof Linkable) {\u000d\u000a            try {\u000d\u000a              title = Utils.urlize(((Linkable)bean).getTitle());\u000d\u000a            } catch (UnsupportedEncodingException uee) {\u000d\u000a              LOG.error("createLink()", uee);\u000d\u000a            } // try\u000d\u000a          } // if\u000d\u000a          String url = "/"+title+"/"+bean.id;\u000d\u000a          if (bean instanceof Topic) {\u000d\u000a            url = url+".html";\u000d\u000a          } // if\u000d\u000a          result = new Link();\u000d\u000a          // result.addHandler("onclick", "pageload()");\u000d\u000a          result.setUrl(url);\u000d\u000a        } // if\u000d\u000a      } // if\u000d\u000a    } // if\u000d\u000a    return result;\u000d\u000a  } // createLink()\u000d\u000a\u000d\u000a    \u000d\u000a  private TargetDescriptor rootDescriptor = null;;\u000d\u000a  \u000d\u000a  \u000d\u000a  public TargetDescriptor parseLink(String url, HttpServletResponse response) {\u000d\u000a    TargetDescriptor result = null;\u000d\u000a    if (url.equals("/")) {\u000d\u000a      try {\u000d\u000a        if (rootDescriptor==null) {\u000d\u000a          List<RootTopic> rs = beanFactory.listBeans(RootTopic.class, null);\u000d\u000a          RootTopic root = null;\u000d\u000a          if (rs.size()==1) {\u000d\u000a            root = rs.get(0);\u000d\u000a          } else {\u000d\u000a            response.sendError(HttpServletResponse.SC_NOT_FOUND, "Have "+rs.size()+" RootTopics in data store");\u000d\u000a          } // if\u000d\u000a          rootDescriptor = new TargetDescriptor(root, null, null);\u000d\u000a        } // if\u000d\u000a        result = rootDescriptor;\u000d\u000a      } catch (Exception e) {\u000d\u000a        result = new TargetDescriptor(e, null, null);\u000d\u000a      } // try/catch\u000d\u000a    } else {\u000d\u000a      Object bean  = null;\u000d\u000a      String[] elements = url.split("/");\u000d\u000a      String id = null;\u000d\u000a      for (String element : elements) {\u000d\u000a        if (element.indexOf(":") > 0) {\u000d\u000a          int idx = element.indexOf(".");\u000d\u000a          if (idx >= 0) {\u000d\u000a            element = element.substring(0, idx);\u000d\u000a          } // if\u000d\u000a          id = element;\u000d\u000a          bean = beanFactory.getBean(element);\u000d\u000a        } // if\u000d\u000a      } // for\u000d\u000a      if (bean != null) {\u000d\u000a        result = new TargetDescriptor(bean, null, null);\u000d\u000a      } else {\u000d\u000a        response.sendError(HttpServletResponse.SC_NOT_FOUND, "no content with id "+id+" in repository.");\u000d\u000a      } // if\u000d\u000a    } // if\u000d\u000a    return result;\u000d\u000a  } // parseLink()\u000d\u000a    \u000d\u000a} // ExampleLinkScheme\u000d\u000a    \u000d\u000a','application/x-groovy')
INSERT INTO OPENJPA_SEQUENCE_TABLE VALUES(0,151)
INSERT INTO ROOTTOPIC VALUES(101,'Tangram Example Website','Tangram','Home','',NULL,NULL)
INSERT INTO ROOTTOPICCSS VALUES(101,3)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,54)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,57)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,61)
INSERT INTO TOPIC VALUES(51,NULL,'JDO','Java Data Object','',NULL)
INSERT INTO TOPIC VALUES(52,NULL,'JPA','Java Persistence API','',NULL)
INSERT INTO TOPIC VALUES(53,NULL,'EBean','EBean','',NULL)
INSERT INTO TOPIC VALUES(54,NULL,'Model','Model','',NULL)
INSERT INTO TOPIC VALUES(55,NULL,'JSP','Java Server Pages','',NULL)
INSERT INTO TOPIC VALUES(56,'View, Velocity, Dynamic, Repository','Velocity','Apache Velocity','<p>Apache Velocity views are stored in a default model class &quot;Code&quot; and thus in the so called repository.</p>\u000a',NULL)
INSERT INTO TOPIC VALUES(57,NULL,'View','View','<p>Tangram contains pluggable, object oriented viewing options with two prominent defaults.</p>\u000a',NULL)
INSERT INTO TOPIC VALUES(58,NULL,'Spring','Spring Controller','',NULL)
INSERT INTO TOPIC VALUES(59,NULL,'Generic Handlers','Tangram Link Handlers','',NULL)
INSERT INTO TOPIC VALUES(60,NULL,'Servlet','Servlet','',NULL)
INSERT INTO TOPIC VALUES(61,NULL,'Controller','Controller','',NULL)
INSERT INTO TOPIC_TOPIC VALUES(54,51)
INSERT INTO TOPIC_TOPIC VALUES(54,52)
INSERT INTO TOPIC_TOPIC VALUES(54,53)
INSERT INTO TOPIC_TOPIC VALUES(57,55)
INSERT INTO TOPIC_TOPIC VALUES(57,56)
INSERT INTO TOPIC_TOPIC VALUES(61,58)
INSERT INTO TOPIC_TOPIC VALUES(61,59)
INSERT INTO TOPIC_TOPIC VALUES(61,60)
