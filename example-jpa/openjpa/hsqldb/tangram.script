CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE MEMORY TABLE ARTICLE(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEXT VARCHAR(255))
CREATE MEMORY TABLE CODE(ID BIGINT NOT NULL PRIMARY KEY,ANNOTATION VARCHAR(255),CODE VARCHAR(255),MIMETYPE VARCHAR(255))
CREATE MEMORY TABLE CONTAINER(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255))
CREATE MEMORY TABLE CONTAINER_TOPIC(CONTAINER_ID BIGINT,CONTENTS_ID BIGINT)
CREATE INDEX I_CNTNTPC_CONTAINER_ID ON CONTAINER_TOPIC(CONTAINER_ID)
CREATE INDEX I_CNTNTPC_ELEMENT ON CONTAINER_TOPIC(CONTENTS_ID)
CREATE MEMORY TABLE IMAGEDATA(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),DATA VARBINARY,HEIGHT VARCHAR(255),MIMETYPE VARCHAR(255),WIDTH VARCHAR(255))
CREATE MEMORY TABLE OPENJPA_SEQUENCE_TABLE(ID TINYINT NOT NULL PRIMARY KEY,SEQUENCE_VALUE BIGINT)
CREATE MEMORY TABLE PASSWORDPROTECTION(ID BIGINT NOT NULL PRIMARY KEY,DESCRIPTION VARCHAR(255),PROTECTIONKEY VARCHAR(255),LOGIN VARCHAR(255),PASSWORD VARCHAR(255))
CREATE MEMORY TABLE PASSWORDPROTECTION_PROTECTEDCONTENTS(PASSWORDPROTECTION_ID BIGINT,ELEMENT BIGINT)
CREATE INDEX I_PSSWNTS_PASSWORDPROTECTION_ID ON PASSWORDPROTECTION_PROTECTEDCONTENTS(PASSWORDPROTECTION_ID)
CREATE MEMORY TABLE ROOTTOPIC(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEASER VARCHAR(255),THUMBNAIL_ID BIGINT,LOGO_ID BIGINT)
CREATE INDEX I_ROTTOPC_LOGO ON ROOTTOPIC(LOGO_ID)
CREATE INDEX I_ROTTOPC_THUMBNAIL ON ROOTTOPIC(THUMBNAIL_ID)
CREATE MEMORY TABLE ROOTTOPICBOTTOMLINKS(ROOTTOPIC_ID BIGINT,BOTTOMLINKS_ID BIGINT)
CREATE INDEX I_RTTPNKS_ELEMENT ON ROOTTOPICBOTTOMLINKS(BOTTOMLINKS_ID)
CREATE INDEX I_RTTPNKS_ROOTTOPIC_ID ON ROOTTOPICBOTTOMLINKS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPICCSS(ROOTTOPIC_ID BIGINT,CSS_ID BIGINT)
CREATE INDEX I_RTTPCSS_ELEMENT ON ROOTTOPICCSS(CSS_ID)
CREATE INDEX I_RTTPCSS_ROOTTOPIC_ID ON ROOTTOPICCSS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPICJS(ROOTTOPIC_ID BIGINT,JS_ID BIGINT)
CREATE INDEX I_RTTPCJS_ELEMENT ON ROOTTOPICJS(JS_ID)
CREATE INDEX I_RTTPCJS_ROOTTOPIC_ID ON ROOTTOPICJS(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_ARTICLE(ROOTTOPIC_ID BIGINT,ELEMENTS_ID BIGINT)
CREATE INDEX I_RTTPTCL_ELEMENT ON ROOTTOPIC_ARTICLE(ELEMENTS_ID)
CREATE INDEX I_RTTPTCL_ROOTTOPIC_ID ON ROOTTOPIC_ARTICLE(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_CONTAINER(ROOTTOPIC_ID BIGINT,RELATEDCONTAINERS_ID BIGINT)
CREATE INDEX I_RTTPTNR_ELEMENT ON ROOTTOPIC_CONTAINER(RELATEDCONTAINERS_ID)
CREATE INDEX I_RTTPTNR_ROOTTOPIC_ID ON ROOTTOPIC_CONTAINER(ROOTTOPIC_ID)
CREATE MEMORY TABLE ROOTTOPIC_TOPIC(ROOTTOPIC_ID BIGINT,SUBTOPICS_ID BIGINT)
CREATE INDEX I_RTTPTPC_ELEMENT ON ROOTTOPIC_TOPIC(SUBTOPICS_ID)
CREATE INDEX I_RTTPTPC_ROOTTOPIC_ID ON ROOTTOPIC_TOPIC(ROOTTOPIC_ID)
CREATE MEMORY TABLE TOPIC(ID BIGINT NOT NULL PRIMARY KEY,KEYWORDS VARCHAR(255),SHORTTITLE VARCHAR(255),TITLE VARCHAR(255),TEASER VARCHAR(255),THUMBNAIL_ID BIGINT)
CREATE INDEX I_TOPIC_THUMBNAIL ON TOPIC(THUMBNAIL_ID)
CREATE MEMORY TABLE TOPIC_ARTICLE(TOPIC_ID BIGINT,ELEMENTS_ID BIGINT)
CREATE INDEX I_TPC_TCL_ELEMENT ON TOPIC_ARTICLE(ELEMENTS_ID)
CREATE INDEX I_TPC_TCL_TOPIC_ID ON TOPIC_ARTICLE(TOPIC_ID)
CREATE MEMORY TABLE TOPIC_CONTAINER(TOPIC_ID BIGINT,RELATEDCONTAINERS_ID BIGINT)
CREATE INDEX I_TPC_TNR_ELEMENT ON TOPIC_CONTAINER(RELATEDCONTAINERS_ID)
CREATE INDEX I_TPC_TNR_TOPIC_ID ON TOPIC_CONTAINER(TOPIC_ID)
CREATE MEMORY TABLE TOPIC_TOPIC(TOPIC_ID BIGINT,SUBTOPICS_ID BIGINT)
CREATE INDEX I_TPC_TPC_ELEMENT ON TOPIC_TOPIC(SUBTOPICS_ID)
CREATE INDEX I_TPC_TPC_TOPIC_ID ON TOPIC_TOPIC(TOPIC_ID)
CREATE MEMORY TABLE SEQUENCE(SEQ_NAME VARCHAR(50) NOT NULL PRIMARY KEY,SEQ_COUNT NUMERIC(38))
CREATE USER SA PASSWORD ""
GRANT DBA TO SA
SET WRITE_DELAY 10
SET SCHEMA PUBLIC
INSERT INTO CODE VALUES(1,'org.tangram.example.Topic','<html>\u000d\u000a<head>\u000d\u000a  <title>$self.title</title>\u000d\u000a  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />\u000d\u000a  <meta name="viewport" content="width=320, initial-scale=0.95" />  \u000d\u000a  <meta name="keywords" content="$self.keywords" />\u000d\u000a  <meta name="language" content="de" />\u000d\u000a#foreach($css in $self.rootTopic.css)\u000d\u000a  #include($css ''cssimport'')\u000d\u000a  \u000d\u000a#end\u000d\u000a#foreach($js in $self.rootTopic.js)\u000d\u000a  #include($js ''jsimport'')\u000d\u000a  \u000d\u000a#end\u000d\u000a</head>\u000d\u000a<body>\u000d\u000a  <div class="header"><p><a #link($self.rootTopic true)>$self.rootTopic.shortTitle</a> - $self.title</p></div>\u000d\u000a<div class="infobox">\u00a9 2015 - <a href="http://github.com/mgoellnitz/tangram-examples/">Tangram Examples</a></div>\u000d\u000a  <div class="box" style="clear: both; width: 100%; height: 0px;"></div>\u000d\u000a  <div class="text">#include($self.teaser)</div>\u000d\u000a#foreach($box in $self.subTopics)\u000d\u000a  <div class="box"><h3><a #link($box true)>$box.title</a></h3>\u000d\u000a    #include($box.teaser)\u000d\u000a    <ul>\u000d\u000a    #foreach($b in $box.subTopics)\u000d\u000a      <li><a #link($b true)>$b.title</a></li>\u000d\u000a    #end\u000d\u000a    </ul>\u000d\u000a  </div>\u000d\u000a#end\u000d\u000a  <hr style="clear: both;"/>\u000d\u000a  #include($self ''editor'')\u000d\u000a</body>\u000d\u000a</html>\u000d\u000a','text/html')
INSERT INTO CODE VALUES(2,'org.tangram.example.Linkable.name','## This template overrides the default for the descriptive name of content items printed next to the ID and the editing buttons in the editor\u000d\u000a#if($self.class.simpleName.contains(''$''))$self.class.superclass.simpleName#else$self.class.simpleName#end: #if($self.title)$self.title#else$self.id#end','text/html')
INSERT INTO CODE VALUES(3,'screen','body {\u000d\u000a  background-color: #506070;\u000d\u000a  color: #607080;\u000d\u000a  font-family: Arial, Helvetica;\u000d\u000a  padding-top: 5px;\u000d\u000a  padding-bottom: 5px;\u000d\u000a  padding-left: 10px;\u000d\u000a  padding-right: 10px;\u000d\u000a  vertical-align: bottom;\u000d\u000a}\u000d\u000a\u000d\u000adiv {\u000d\u000a  margin: 0;\u000d\u000a  padding: 0;\u000d\u000a}\u000d\u000a\u000d\u000ap {\u000d\u000a  margin: 0;\u000d\u000a  padding: 0;\u000d\u000a}\u000d\u000a\u000d\u000aa {\u000d\u000a  text-decoration: none;\u000d\u000a  color: #FFFFFF;\u000d\u000a}\u000d\u000a\u000d\u000aa:link { }\u000d\u000a\u000d\u000aa:visited { }\u000d\u000a\u000d\u000aa:hover { color: #909090; }\u000d\u000a\u000d\u000aa:focus { color: #0000FF; }\u000d\u000a\u000d\u000aa:active { color: #FF0000; }\u000d\u000a\u000d\u000a.header a {\u000d\u000a  color: #D0B080;\u000d\u000a}\u000d\u000a\u000d\u000a\u000d\u000ah1 { font-size: 14pt; }\u000d\u000a\u000d\u000a.header {\u000d\u000a  background-color: #FFFFFF;\u000d\u000a  color: #D0B080;\u000d\u000a  height: 60px;\u000d\u000a  font-size: 20pt;\u000d\u000a  font-weight: bold;\u000d\u000a  text-align: right;\u000d\u000a  vertical-align: bottom;\u000d\u000a  padding: 10px;\u000d\u000a}\u000d\u000a\u000d\u000a.infobox {\u000d\u000a  background-color: #D0B080;\u000d\u000a  height: 24px;\u000d\u000a  padding-top: 5px;\u000d\u000a  padding-left: 5px;\u000d\u000a  margin: 0;\u000d\u000a}\u000d\u000a\u000d\u000a.box {\u000d\u000a  padding: 5px;\u000d\u000a  width: 300px;\u000d\u000a  float: left;\u000d\u000a  color: #909090;\u000d\u000a}\u000d\u000a\u000d\u000a.text {\u000d\u000a  color: #FFFFE0;\u000d\u000a}\u000d\u000a\u000d\u000a.clear {\u000d\u000a  clear: both;\u000d\u000a}\u000d\u000a','text/css')
INSERT INTO CODE VALUES(4,'org.tangram.example.Topic','package org.tangram.example.links;\u000a\u000aimport javax.servlet.http.HttpServletRequest;\u000aimport javax.servlet.http.HttpServletResponse;\u000aimport org.slf4j.Logger;\u000aimport org.slf4j.LoggerFactory;\u000a\u000aimport org.tangram.Constants;\u000aimport org.tangram.content.Content;\u000aimport org.tangram.content.BeanFactory;\u000aimport org.tangram.content.BeanFactoryAware;\u000aimport org.tangram.view.Utils;\u000aimport org.tangram.view.TargetDescriptor;\u000aimport org.tangram.link.Link;\u000aimport org.tangram.link.LinkHandler;\u000a\u000aimport org.tangram.example.RootTopic;\u000aimport org.tangram.example.Linkable;\u000aimport org.tangram.example.Topic;\u000aimport org.tangram.example.ImageData;\u000a\u000apublic class ExampleLinkScheme implements LinkHandler, BeanFactoryAware {\u000a  \u000a  private static Logger log = LoggerFactory.getLogger(ExampleLinkScheme.class);\u000a\u000a  private BeanFactory beanFactory;\u000a  \u000a  \u000a  public void setBeanFactory(BeanFactory factory) {\u000a    beanFactory = factory;\u000a  } // setBeanFactory()\u000a  \u000a  \u000a  public Set<String> getCustomViews() {\u000a    Set <String> result = new HashSet<String>();\u000a    result.add(Constants.DEFAULT_VIEW);\u000a    return result;\u000a  } // getCustomViews()\u000a\u000a\u000a  public Link createLink(HttpServletRequest request, HttpServletResponse response, Object bean, String action, String view) {    \u000a        Link result = null;\u000a        if ((action==null)&&(view==null)) {\u000a            if (bean instanceof RootTopic) {\u000a                result = new Link();\u000a                result.setUrl("/");\u000a            } else {\u000a                if ((bean instanceof Topic)||(bean instanceof ImageData)) {\u000a                    String title = "-";\u000a                    if (bean instanceof Linkable) {\u000a                        try {\u000a                            title = Utils.urlize(((Linkable)bean).getTitle());\u000a                        } catch (UnsupportedEncodingException uee) {\u000a                            log.error("createLink()", uee);\u000a                        } // try\u000a                    } // if\u000a                    String url = "/"+title+"/"+bean.id;\u000a                    if (bean instanceof Topic) {\u000a                      url = url+".html";\u000a                    } // if\u000a                    result = new Link();\u000a                    // result.addHandler("onclick", "pageload()");\u000a                    result.setUrl(url);\u000a                } // if\u000a            } // if\u000a        } // if\u000a        return result;\u000a  } // createLink()\u000a\u000a    \u000a  private TargetDescriptor rootDescriptor = null;;\u000a  \u000a  \u000a  public TargetDescriptor parseLink(String url, HttpServletResponse response) {\u000a    TargetDescriptor result = null;\u000a    if (url.equals("/")) {\u000a        try {\u000a            if (rootDescriptor==null) {\u000a                List<RootTopic> rs = beanFactory.listBeans(RootTopic.class, null);\u000a                RootTopic root = null;\u000a                if (rs.size()==1) {\u000a                    root = rs.get(0);\u000a                } else {\u000a                    response.sendError(HttpServletResponse.SC_NOT_FOUND, "Have "+rs.size()+" RootTopics in data store");\u000a                } // if\u000a                rootDescriptor = new TargetDescriptor(root, null, null);\u000a            } // if\u000a            result = rootDescriptor;\u000a        } catch (Exception e) {\u000a            result = new TargetDescriptor(e, null, null);\u000a        } // try/catch\u000a      } else {\u000a          Object bean  = null;\u000a          String[] elements = url.split("/");\u000a          String id = null;\u000a          for (String element : elements) {\u000a            if (element.indexOf(":") > 0) {\u000a              int idx = element.indexOf(".");\u000a              if (idx >= 0) {\u000a                element = element.substring(0, idx);\u000a              } // if\u000a              id = element;\u000a              bean = beanFactory.getBean(element);\u000a            } // if\u000a          } // for\u000a          if (bean != null) {\u000a              result = new TargetDescriptor(bean, null, null);\u000a          } else {\u000a              response.sendError(HttpServletResponse.SC_NOT_FOUND, "no content with id "+id+" in repository.");\u000a          } // if\u000a      } // if\u000a      return result;\u000a  } // parseLink()\u000a    \u000a} // ExampleLinkScheme\u000a','application/x-groovy')
INSERT INTO CODE VALUES(5,'only screen and (max-width: 480px)','body { \u000d\u000a  padding: 0; \u000d\u000a}','text/css')
INSERT INTO CODE VALUES(6,'only screen and (max-width: 480px)','.box { \u000d\u000a  height: 300px; \u000d\u000a}','text/css')
INSERT INTO CODE VALUES(7,'org.tangram.example.Linkable.description','## This template overrides the value printed for each items beneath references in the editor.\u000d\u000a#if($self.title)$self.title#else-#end','text/html')
INSERT INTO OPENJPA_SEQUENCE_TABLE VALUES(0,151)
INSERT INTO ROOTTOPIC VALUES(101,'Tangram Example Website','Tangram','Home','',NULL,NULL)
INSERT INTO ROOTTOPICCSS VALUES(101,3)
INSERT INTO ROOTTOPICCSS VALUES(101,5)
INSERT INTO ROOTTOPICCSS VALUES(101,6)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,54)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,57)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,61)
INSERT INTO ROOTTOPIC_TOPIC VALUES(101,62)
INSERT INTO TOPIC VALUES(51,NULL,'JDO','Java Data Object','<p>Java Data Objects are arguably the most flexible Data Storing solution for persisting Java objects. We use the implementation of DataNucleus which also presents us a bridge to be used on the Google App Engine.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(52,NULL,'JPA','Java Persistence API','',NULL)
INSERT INTO TOPIC VALUES(53,NULL,'EBean','EBean','',NULL)
INSERT INTO TOPIC VALUES(54,NULL,'Model','Model','<p>Since Tangam is in its core built around object oriented templating we obviously need some objects. Tangram solves this by presenting pluggable model solutions with ORM components of different flavours.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(55,NULL,'JSP','Java Server Pages','<p>Java Server Pages are still the standard way to present web output and Tangram supports this and uses this internally. JSPs are supported through a small tag library for the interface with the rest of the view layer in Tangram.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(56,'View, Velocity, Dynamic, Repository','Velocity','Apache Velocity','<p>Apache Velocity are the option to store view templates in the repository alongside the content elements of the site and thus liewise dynamically ediatble. Those views are stored in a default model class &quot;Code&quot; like CSS and JavaScript codes.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(57,NULL,'View','View','<p>Tangram contains two built in view layer solutions.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(58,NULL,'Spring','Spring Controller','<p>When using Tangram together with the Springframework it is a natural match to use Spring&#39;s @Controllers like Tangram does in this scenario itself internally. The only disadvantage is, that you will later have a lot of work left, when you need to migrate away from Spring depending on your deployment scenario or plattform used.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(59,NULL,'Generic Handlers','Tangram Link Handlers','<p>Tangram comes with its own link handling facility which is portable accross all usage scenarios and flavours. Link handler instances can also be placed as code objects in the repository as Groovy code.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(60,NULL,'Servlet','Servlet','<p>Since Java Servlets are the minimum and sometimes only consensus for web request handling, Tangram provides an integration with such scenarios. It is though not recommended to implement custom Servlets at such a low level. If nothing else is available at least stick to the internal Tangram Link Handler solution.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(61,NULL,'Controller','Controller','<p>Depending on the scenario and flavour of Tangram you are using, you have at least two options for the controller or url mapping facilities to use.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(62,'DI, Dependency Injection','DI','Dependency Injection','<p>The Tangram bits and pieces arfe glued together by means of the Dependency Injection and Inversion of Controller pattern. This does still not mean that your are bound to a specific Dependency Injection library or container.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(63,NULL,'Spring','Springframework','<p>The Springframework is one of the prominent Dependency Injection solutions for Java and a main target for Tangram.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(64,NULL,'Guice','Google Guice','<p>Tangram supports the use of Google Guice as the solution to glue the parts together and configure the components.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC VALUES(65,NULL,'Dinistiq','Dinistiq','<p>The smalles possible footprint for Tangram applications can be achieved by use of the Dinistiq library. It is a custom development which started as a research part of Tangram to make the framework independent of a specific Dependecy Injection library or container and now is an independent project used for other applications as well.</p>\u000d\u000a',NULL)
INSERT INTO TOPIC_TOPIC VALUES(57,56)
INSERT INTO TOPIC_TOPIC VALUES(57,55)
INSERT INTO TOPIC_TOPIC VALUES(54,51)
INSERT INTO TOPIC_TOPIC VALUES(54,52)
INSERT INTO TOPIC_TOPIC VALUES(54,53)
INSERT INTO TOPIC_TOPIC VALUES(61,59)
INSERT INTO TOPIC_TOPIC VALUES(61,58)
INSERT INTO TOPIC_TOPIC VALUES(61,60)
INSERT INTO TOPIC_TOPIC VALUES(62,63)
INSERT INTO TOPIC_TOPIC VALUES(62,64)
INSERT INTO TOPIC_TOPIC VALUES(62,65)
INSERT INTO SEQUENCE VALUES('SEQ_GEN_TABLE',0)
